{"version":3,"file":"index.js","sources":["../src/web-components/todo-input/index.js","../src/web-components/todo-item/index.js","../src/index.js"],"sourcesContent":["import { h, customElement } from \"atomico\";\r\nimport style from \"./style.css\";\r\n\r\n/**\r\n * Input component, shows the input that collects the texts for the creation of a task\r\n * @param {object} props\r\n * @param {function} props.handlerChange\r\n * @param {string} props.placeholder\r\n * @return {object}\r\n */\r\nexport function Input(props) {\r\n\treturn (\r\n\t\t<host shadowDom>\r\n\t\t\t<style>{style}</style>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={event => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tif (props.handlerChange)\r\n\t\t\t\t\t\tprops.handlerChange({\r\n\t\t\t\t\t\t\ttext: event.target.input.value,\r\n\t\t\t\t\t\t\tid: Date.now()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tevent.target.reset();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<input name=\"input\" type=\"text\" placeholder={props.placeholder} />\r\n\t\t\t</form>\r\n\t\t</host>\r\n\t);\r\n}\r\n\r\nInput.observables = {\r\n\thandlerChange: Function,\r\n\tplaceholder: String\r\n};\r\n\r\nexport default customElement(\"atomico-todo-input\", Input);\r\n","import { h, customElement } from \"atomico\";\r\nimport style from \"./style.css\";\r\n/**\r\n * Component article, shows the task and allows you to mark how the\r\n * elimination(props.handlerRemove) of this has been done(props.handlerToggle) or eliminated\r\n * @param {object} props\r\n * @param {integer|string} props.key\r\n * @param {function} props.handlerToggle\r\n * @param {boolean} props.checked\r\n * @param {string} props.text\r\n * @param {function} props.handlerRemove\r\n * @return {object}\r\n */\r\nexport function Item(props) {\r\n\treturn (\r\n\t\t<host shadowDom key={props.key}>\r\n\t\t\t<style>{style}</style>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tonChange={props.handlerToggle}\r\n\t\t\t\tchecked={props.checked}\r\n\t\t\t/>\r\n\t\t\t<div class=\"text\">{props.text}</div>\r\n\t\t\t<button onClick={props.handlerRemove}>x</button>\r\n\t\t</host>\r\n\t);\r\n}\r\n\r\nItem.observables = {\r\n\thandlerToggle: Function,\r\n\thandlerRemove: Function,\r\n\tchecked: Boolean,\r\n\ttext: String\r\n};\r\n\r\nexport default customElement(\"atomico-todo-item\", Item);\r\n","import { h, customElement, useState } from \"atomico\";\r\n\r\nimport TodoInput from \"./web-components/todo-input\";\r\nimport TodoItem from \"./web-components/todo-item\";\r\n\r\nimport style from \"./style.css\";\r\n\r\nfunction Todo({ task = [] }) {\r\n\tlet [state, setState] = useState(task);\r\n\treturn (\r\n\t\t<host shadowDom>\r\n\t\t\t<style>{style}</style>\r\n\t\t\t<TodoInput\r\n\t\t\t\tplaceholder=\"What needs to be done?\"\r\n\t\t\t\thandlerChange={task => {\r\n\t\t\t\t\tsetState(state.concat(task));\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t{state.map(({ text, checked, id }, localIndex) => (\r\n\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\ttext={text}\r\n\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\thandlerRemove={() => {\r\n\t\t\t\t\t\t\tsetState(state.filter((data, index) => index !== localIndex));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\thandlerToggle={() => {\r\n\t\t\t\t\t\t\tsetState(\r\n\t\t\t\t\t\t\t\tstate.map((data, index) =>\r\n\t\t\t\t\t\t\t\t\tindex === localIndex\r\n\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked: !data.checked\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t: data\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</host>\r\n\t);\r\n}\r\n\r\nTodo.observables = {\r\n\ttask: Array\r\n};\r\n\r\ncustomElement(\"atomico-todo\", Todo);\r\n"],"names":["Input","props","h","shadowDom","style","onSubmit","event","preventDefault","handlerChange","text","target","input","value","id","Date","now","reset","name","type","placeholder","observables","Function","String","customElement","Item","key","onChange","handlerToggle","checked","class","onClick","handlerRemove","Boolean","Todo","task","state","setState","useState","TodoInput","concat","map","localIndex","TodoItem","filter","data","index","Array"],"mappings":"qPAUO,SAASA,EAAMC,UAEpBC,UAAMC,cACLD,eAAQE,GACRF,UACCG,SAAUC,IACTA,EAAMC,iBACFN,EAAMO,eACTP,EAAMO,cAAc,CACnBC,KAAMH,EAAMI,OAAOC,MAAMC,MACzBC,GAAIC,KAAKC,QAEXT,EAAMI,OAAOM,UAGdd,WAAOe,KAAK,QAAQC,KAAK,OAAOC,YAAalB,EAAMkB,gBAMvDnB,EAAMoB,YAAc,CACnBZ,cAAea,SACfF,YAAaG,QAGd,MAAeC,EAAc,qBAAsBvB,kgCCvB5C,SAASwB,EAAKvB,UAEnBC,UAAMC,aAAUsB,IAAKxB,EAAMwB,KAC1BvB,eAAQE,GACRF,WACCgB,KAAK,WACLQ,SAAUzB,EAAM0B,cAChBC,QAAS3B,EAAM2B,UAEhB1B,SAAK2B,MAAM,QAAQ5B,EAAMQ,MACzBP,YAAQ4B,QAAS7B,EAAM8B,qBAK1BP,EAAKJ,YAAc,CAClBO,cAAeN,SACfU,cAAeV,SACfO,QAASI,QACTvB,KAAMa,QAGP,MAAeC,EAAc,oBAAqBC,wHC5BzCS,GAAKC,KAAEA,EAAO,SACjBC,EAAOC,GAAYC,EAASH,UAEhChC,UAAMC,cACLD,eAAQE,GACRF,EAACoC,GACAnB,YAAY,yBACZX,cAAe0B,IACdE,EAASD,EAAMI,OAAOL,OAGxBhC,aACEiC,EAAMK,IAAI,EAAG/B,KAAAA,EAAMmB,QAAAA,EAASf,GAAAA,GAAM4B,IAClCvC,EAACwC,GACAjB,IAAKZ,EACLJ,KAAMA,EACNmB,QAASA,EACTG,cAAe,KACdK,EAASD,EAAMQ,OAAO,CAACC,EAAMC,IAAUA,IAAUJ,KAElDd,cAAe,KACdS,EACCD,EAAMK,IAAI,CAACI,EAAMC,IAChBA,IAAUJ,EACP,IACGG,EACHhB,SAAUgB,EAAKhB,SAEfgB,UAWZX,EAAKb,YAAc,CAClBc,KAAMY,OAGPvB,EAAc,eAAgBU"}