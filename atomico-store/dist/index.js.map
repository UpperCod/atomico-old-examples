{"version":3,"file":"index.js","sources":["../node_modules/atomico/src/router/options.js","../node_modules/atomico/src/router/parse.js","../node_modules/atomico/src/router/hooks.js","../node_modules/atomico/src/router/index.js","../node_modules/atomico/src/lazy/index.js","../src/reducer.js","../src/web-components/atomico-store-header/index.js","../src/index.js"],"sourcesContent":["export let options = {\r\n\t/**\r\n\t * @return {string} pathname\r\n\t */\r\n\tpathname() {\r\n\t\treturn location.pathname;\r\n\t},\r\n\t/**\r\n\t * Dispatch history a new pathname\r\n\t * @type {Redirect}\r\n\t */\r\n\tredirect(pathname) {\r\n\t\tif (pathname == options.pathname()) return;\r\n\t\thistory.pushState({}, \"history\", pathname);\r\n\t\t//history.go(history.length);\r\n\t\twindow.dispatchEvent(new PopStateEvent(\"popstate\"));\r\n\t},\r\n\tsubscribe(handler) {\r\n\t\twindow.addEventListener(\"popstate\", handler);\r\n\t\treturn () => window.removeEventListener(\"popstate\", handler);\r\n\t}\r\n};\r\n","let FOLDERS = /([^\\/]+)/g;\r\nlet FOLDER = \"[^\\\\/]\";\r\nlet SPLIT = \"(?:\\\\/){0,1}\";\r\nlet PARAM = /^(:)(\\w+)(\\?|(\\.){3}){0,1}/;\r\nlet PARAMS_EMPTY = {};\r\nlet MEMO = {};\r\n\r\nexport function format(path) {\r\n\treturn path.replace(/(\\/){2,}/g, \"/\").replace(/([^\\/]+)\\/$/, \"$1\");\r\n}\r\n\r\nexport function parse(string) {\r\n\tlet folders = string.match(FOLDERS) || [\"\"];\r\n\tlet params = [];\r\n\tlet regexp = new RegExp(\r\n\t\t\"^\" +\r\n\t\t\tfolders\r\n\t\t\t\t.map(folder => {\r\n\t\t\t\t\tlet [string, param, field, type] = folder.match(PARAM) || [];\r\n\t\t\t\t\tif (param) {\r\n\t\t\t\t\t\tparams.push(field);\r\n\t\t\t\t\t\tif (type === \"...\") {\r\n\t\t\t\t\t\t\treturn `(.*)`;\r\n\t\t\t\t\t\t} else if (type === \"?\") {\r\n\t\t\t\t\t\t\treturn `${SPLIT}(${FOLDER}*)`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn `\\\\/(${FOLDER}+)`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn `\\\\/(?:${folder\r\n\t\t\t\t\t\t\t.replace(/(\\.|\\-)/g, \"\\\\$1\")\r\n\t\t\t\t\t\t\t.replace(/\\*/g, FOLDER + \"+\")\r\n\t\t\t\t\t\t\t.replace(/\\((?!\\?\\:)/g, \"(?:\")})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\") +\r\n\t\t\t\"$\",\r\n\t\t\"i\"\r\n\t);\r\n\r\n\treturn { regexp, params, logs: {} };\r\n}\r\n/**\r\n * permite comparar un patron de captura vs un ruta de entrada\r\n * @param {string} path - ruta de patron de captura\r\n * @param {string} value  - ruta de comparacion a patron\r\n * @return {array} - [ inRoute:boolean, params:object ];\r\n */\r\nexport function match(path, value) {\r\n\tpath = format(path);\r\n\tvalue = format(value);\r\n\tif (!MEMO[path]) {\r\n\t\tMEMO[path] = parse(path);\r\n\t}\r\n\tlet { regexp, params, logs } = MEMO[path];\r\n\tif (logs[value]) {\r\n\t\treturn logs[value];\r\n\t}\r\n\tlet vs = value.match(regexp);\r\n\treturn (logs[value] = [\r\n\t\tvs ? true : false,\r\n\t\tvs\r\n\t\t\t? vs.slice(1).reduce((next, value, index) => {\r\n\t\t\t\t\tnext[params[index] || index] = value;\r\n\t\t\t\t\treturn next;\r\n\t\t\t  }, {})\r\n\t\t\t: PARAMS_EMPTY\r\n\t]);\r\n}\r\n","import { useState, useEffect, useMemo } from \"../core/index.js\";\r\nimport { options } from \"./options.js\";\r\nimport { match } from \"./parse.js\";\r\n\r\nexport function useHistory() {\r\n\tlet pathname = options.pathname();\r\n\tlet [state, setState] = useState({ pathname });\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction handler() {\r\n\t\t\tlet pathname = options.pathname();\r\n\t\t\tif (state.pathname != pathname) {\r\n\t\t\t\tstate.pathname = pathname;\r\n\t\t\t\tsetState(state);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn options.subscribe(handler);\r\n\t}, []);\r\n\treturn [pathname, options.redirect];\r\n}\r\n\r\nexport function useMatchRoute(path) {\r\n\treturn match(path, options.pathname());\r\n}\r\n\r\nexport function useRoute(path) {\r\n\tuseHistory();\r\n\treturn useMatchRoute(path);\r\n}\r\n\r\nexport function useRedirect(path) {\r\n\tlet redirect = options.redirect;\r\n\treturn useMemo(() => (path ? path => redirect(path) : redirect), [\r\n\t\tpath,\r\n\t\tredirect\r\n\t]);\r\n}\r\n","import { createElement, useMemo, toList } from \"../core/index.js\";\r\nimport { useHistory } from \"./hooks.js\";\r\nimport { match } from \"./parse.js\";\r\nexport { options } from \"./options.js\";\r\nexport * from \"./hooks.js\";\r\n\r\nexport function Router({ children }) {\r\n\tlet [pathname] = useHistory();\r\n\tlet nextChild;\r\n\tlet nextParams;\r\n\r\n\tchildren = useMemo(() => toList(children), [children]);\r\n\r\n\tlet length = children.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tlet child = children[i];\r\n\t\tlet props = child.props;\r\n\t\tif (props.path) {\r\n\t\t\tlet [inRoute, params] = match(child.props.path, pathname);\r\n\t\t\tif (inRoute) {\r\n\t\t\t\tnextChild = child;\r\n\t\t\t\tnextParams = params;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (child.props.default) {\r\n\t\t\tnextChild = child;\r\n\t\t}\r\n\t}\r\n\r\n\tif (nextChild) {\r\n\t\tlet { type, props } = nextChild;\r\n\t\tlet nextProps = { ...props, params: nextParams };\r\n\t\tdelete nextProps.path;\r\n\t\tdelete nextProps.default;\r\n\t\treturn createElement(type, nextProps);\r\n\t}\r\n}\r\n","import { createElement, useEffect, useState } from \"../core/index.js\";\r\nimport { isFunction } from \"../core/utils.js\";\r\n\r\n/**\r\n * It allows to load a component asynchronously.\r\n * @param {Function} callback\r\n * @return {object}\r\n */\r\nexport function lazy(callback) {\r\n\treturn ({ loading, ...props }) => {\r\n\t\tlet state = useImport(callback, props);\r\n\r\n\t\tif (state.wait) return;\r\n\r\n\t\treturn state.loading\r\n\t\t\t? loading\r\n\t\t\t: isFunction(state.default)\r\n\t\t\t? createElement(state.default, props)\r\n\t\t\t: state.default;\r\n\t};\r\n}\r\n/**\r\n * It allows to load a component asynchronously.\r\n * @param {Function} callback\r\n * @param {object} [props]\r\n */\r\nexport function useImport(callback, props) {\r\n\tlet [state, setState] = useState({ wait: true });\r\n\tuseEffect(() => {\r\n\t\tlet loading = true;\r\n\t\tcallback(props).then(md => {\r\n\t\t\tloading && setState(md);\r\n\r\n\t\t\tloading = false;\r\n\t\t});\r\n\t\tfps(() => {\r\n\t\t\tloading && setState({ loading: true });\r\n\t\t});\r\n\t\treturn () => (loading = false);\r\n\t}, [callback]);\r\n\treturn state;\r\n}\r\n\r\nfunction fps(callback, count = 3) {\r\n\tcount-- ? requestAnimationFrame(() => fps(callback, count)) : callback();\r\n}\r\n","export let Actions = {\r\n\tADD_CART: Symbol(\"ADD_CART\"),\r\n\tREM_CART: Symbol(\"REM_CART\")\r\n};\r\n\r\nexport function reducer(state, { type, data }) {\r\n\tswitch (type) {\r\n\t\tcase Actions.ADD_CART:\r\n\t\t\tlet include;\r\n\t\t\tstate = state.map(product => {\r\n\t\t\t\tif (product.id == data.id) {\r\n\t\t\t\t\tinclude = true;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...product,\r\n\t\t\t\t\t\tcount: product.count + 1\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn product;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn include ? state : state.concat({ ...data, count: 1 });\r\n\t\tcase Actions.REM_CART:\r\n\t\t\treturn state\r\n\t\t\t\t.map(product =>\r\n\t\t\t\t\tproduct.id == data.id\r\n\t\t\t\t\t\t? { ...product, count: product.count - 1 }\r\n\t\t\t\t\t\t: product\r\n\t\t\t\t)\r\n\t\t\t\t.filter(product => product.count > 0);\r\n\t}\r\n}\r\n","import { h, customElement } from \"atomico\";\r\nimport style from \"./style.css\";\r\nfunction Header() {\r\n\treturn (\r\n\t\t<host shadowDom>\r\n\t\t\t<style>{style}</style>\r\n\t\t\t<slot />\r\n\t\t</host>\r\n\t);\r\n}\r\n\r\nexport default customElement(\"atomico-store-header\", Header);\r\n","import { h, customElement, useReducer } from \"atomico\";\r\nimport { Router, useRedirect, useRoute } from \"atomico/router\";\r\nimport { lazy } from \"atomico/lazy\";\r\n\r\nimport { reducer, Actions } from \"./reducer.js\";\r\nimport AtomicoStoreHeader from \"./web-components/atomico-store-header\";\r\nimport AtomicoStoreButton from \"./web-components/atomico-store-button\";\r\n\r\nimport style from \"./style.css\";\r\n\r\nlet Products = lazy(() => import(\"./pages/product\"));\r\nlet Cart = lazy(() => import(\"./pages/cart\"));\r\n\r\nfunction AtomicoStore({ products, location = \"/\" }) {\r\n\tlet [cart, dispatch] = useReducer(reducer, []);\r\n\tlet redirect = useRedirect();\r\n\tlet [inRoute, params] = useRoute(`${location}/:page/:any...`);\r\n\r\n\treturn (\r\n\t\t<host shadowDom>\r\n\t\t\t<style>{style}</style>\r\n\t\t\t<AtomicoStoreHeader>\r\n\t\t\t\t<AtomicoStoreButton\r\n\t\t\t\t\tonClick={() => redirect(location)}\r\n\t\t\t\t\tchecked={params.page == null}\r\n\t\t\t\t>\r\n\t\t\t\t\tProducts\r\n\t\t\t\t</AtomicoStoreButton>\r\n\t\t\t\t<AtomicoStoreButton\r\n\t\t\t\t\tcounter={cart.reduce((total, { count }) => total + count, 0)}\r\n\t\t\t\t\tonClick={() => redirect(`${location}cart`)}\r\n\t\t\t\t\tchecked={params.page == \"cart\"}\r\n\t\t\t\t>\r\n\t\t\t\t\tCart\r\n\t\t\t\t</AtomicoStoreButton>\r\n\t\t\t</AtomicoStoreHeader>\r\n\t\t\t<Router>\r\n\t\t\t\t<Cart\r\n\t\t\t\t\tpath={`${location}/cart`}\r\n\t\t\t\t\tloading=\"...loading!\"\r\n\t\t\t\t\tproducts={cart}\r\n\t\t\t\t\tremCart={data => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: Actions.REM_CART,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Products\r\n\t\t\t\t\tdefault\r\n\t\t\t\t\tloading=\"...loading!\"\r\n\t\t\t\t\tproducts={products}\r\n\t\t\t\t\taddCart={data => {\r\n\t\t\t\t\t\tconsole.log(dispatch);\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: Actions.ADD_CART,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Router>\r\n\t\t</host>\r\n\t);\r\n}\r\n\r\nAtomicoStore.observables = {\r\n\tproducts: Array,\r\n\tlocation: String\r\n};\r\n\r\ncustomElement(\"atomico-store\", AtomicoStore);\r\n"],"names":["options","pathname","location","[object Object]","history","pushState","window","dispatchEvent","PopStateEvent","subscribe","handler","addEventListener","removeEventListener","FOLDERS","FOLDER","SPLIT","PARAM","PARAMS_EMPTY","MEMO","format","path","replace","match","value","string","folders","params","regexp","RegExp","map","folder","param","field","type","push","join","logs","parse","vs","slice","reduce","next","index","useHistory","state","setState","useState","useEffect","redirect","useRoute","useMatchRoute","Router","children","nextChild","nextParams","length","useMemo","toList","i","child","props","inRoute","default","nextProps","createElement","lazy","callback","loading","wait","then","md","fps","count","requestAnimationFrame","useImport","isFunction","AtomicoStore","customElement"],"mappings":"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"}